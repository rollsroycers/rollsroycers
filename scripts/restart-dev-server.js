#!/usr/bin/env node

/**
 * ุฅุนุงุฏุฉ ุชุดุบูู ุงูุณูุฑูุฑ ุงููุญูู ูุชุญุฏูุซ ุงูุชุฑุฌูุงุช
 */

const { spawn, exec } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('๐ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุณูุฑูุฑ ุงููุญูู ูุน ุงูุชุฑุฌูุงุช ุงููุญุฏุซุฉ...\n');

async function restartDevServer() {
  try {
    // ุฅููุงู ุฃู ุนูููุงุช Next.js running
    console.log('โน๏ธ ุฅููุงู ุงูุณูุฑูุฑ ุงููุญูู...');
    await new Promise((resolve) => {
      exec('pkill -f "next dev"', () => {
        setTimeout(resolve, 1000); // ุงูุชุธุงุฑ ุซุงููุฉ ููุชุฃูุฏ ูู ุงูุฅููุงู
      });
    });

    // ุญุฐู ูุฌูุฏ .next cache
    console.log('๐๏ธ ูุณุญ ุงูู cache...');
    const nextDir = path.join(process.cwd(), '.next');
    if (fs.existsSync(nextDir)) {
      await new Promise((resolve) => {
        exec('rm -rf .next', () => {
          resolve();
        });
      });
      console.log('โ ุชู ูุณุญ ุงูู cache');
    }

    // ุชุดุบูู ุงูุณูุฑูุฑ ุงูุฌุฏูุฏ
    console.log('๐ ุชุดุบูู ุงูุณูุฑูุฑ ุงูุฌุฏูุฏ...\n');
    
    const devProcess = spawn('npm', ['run', 'dev'], {
      stdio: 'inherit',
      detached: false
    });

    console.log('โ ุงูุณูุฑูุฑ ูุนูู ุงูุขู ุนูู http://localhost:3000');
    console.log('\n๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:');
    console.log('1. ุงูุชุธุฑ ุญุชู ููุชูู ุชุญููู ุงูุณูุฑูุฑ');
    console.log('2. ุงุฐูุจ ุฅูู http://localhost:3000/services/wedding');
    console.log('3. ุงุถุบุท Ctrl+Shift+R ูุชุญุฏูุซ ุงูุตูุญุฉ ุจุงููุงูู');
    console.log('4. ูุฌุจ ุฃู ุชุฑู ุงููุตูุต ุงููุชุฑุฌูุฉ ุจุฏูุงู ูู ุงูููุงุชูุญ ุงูุฎุงู');

    // ุงูุชุนุงูู ูุน ุฅุดุงุฑุงุช ุงูุฅููุงุก
    process.on('SIGINT', () => {
      console.log('\nโน๏ธ ุฅููุงู ุงูุณูุฑูุฑ...');
      devProcess.kill('SIGINT');
      process.exit(0);
    });

    process.on('SIGTERM', () => {
      devProcess.kill('SIGTERM');
      process.exit(0);
    });

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุณูุฑูุฑ:', error.message);
    console.log('\n๐ง ุฌุฑุจ ูุฐู ุงูุฎุทูุงุช ูุฏููุงู:');
    console.log('1. ุงุถุบุท Ctrl+C ูุฅููุงู ุงูุณูุฑูุฑ');
    console.log('2. ุดุบู: rm -rf .next');
    console.log('3. ุดุบู: npm run dev');
  }
}

restartDevServer(); 